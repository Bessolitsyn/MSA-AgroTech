@startuml агро_V1
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
title "Context Diagram"
'title "Платформа управления животноводческим комплексом"
Person(сотрудник, "любой сотрудник", "Директор, ветеринар, животновод, дежурный сотрудник")

System_Boundary(платформа, "Агротех  - платформа управления животноводческим комплексом") {
    ''Нефункциональные требования
    ''обеспечивать достаточно высокую отказоустойчивость 99,95%;
    ''быть расширяемой, то есть иметь возможность разработать новый функционал без изменений существующего;
    ''иметь высокую производительность — от момента возникновения нештатной ситуации, зафиксированной с помощью видеоаналитики, должно проходить не более 5 секунд до момента оповещения;
    ''позволять системе видеоаналитики реагировать в реальном времени (миллисекунды).
    ''обеспечивать достаточно высокую отказоустойчивость 99,95%;
    
    System(databus, "система передачи и обработки данных", "сбор данных от технических систем, структурирование, хранение ")
    
    System(цуп, "система управления хозяйством", "управление,  мониторинг, анализ, оповещение, отчетность")
    '{
        'работать даже в случае отсутствия интернета и при необходимости отправлиять уведомления дежурному сотруднику на местах мониторинга, а после восстановления связи синхронизироваться с центральной системой;
        'иметь разделение ролей и поддерживать современные способы аутентификации и авторизации;
        'иметь API для создания мобильного приложения или веб-приложения.
        'предоставлять базовые метрики для передачи в другие системы;
        'поддерживать возможность добавления собственных метрик;

    '}
    System(животноводство,"система жизнеобеспечения животных", "Управление и контроль состояния технических средств(кормушк, поилки и др), учет ресурсов ")
    '{
        'управлять кормушками и поилками разных производителей;
        'следить за состоянием систем фильтрации воды;

    '}   
    System(видео,"система видеонаблюдения за животными", "") 
    '{
        'поддерживать необходимое количество видеокамер для аналитики в реальном времени от разных производителей;
    '}       
    
    System(agent, "агент", "система синхронизации с ЦОД Агротех")
    '{
        'быть построена по принципу «центральный сервер — агенты» на конкретных фермах без ограничения количества таких агентов (в синхронизации между агентами и центральным сервером допускается задержка до 10 минут без учёта проблем со связью);
    '} 
}
    System_Ext(ai, "ИИ-система мониторинга животных", "анализ видео") 
    'Готовую нейросетевую модель предоставят партнёры.
    '{ 
        'фиксировать признаки беспокойного поведения или драк среди животных и оповещать оператора;
        'фиксировать признаки задавливания поросят;
        'оценивать состояние животных по внешнему виду и поведению: болезнь, гибель, беспокойство и так далее;
        'пересчитывать поголовье;
        'делать пересчёт животных;
    '}
    System_Ext(manager, "АгроПром Х - Цифровая платформа")



Rel(видео, ai, "Поток видео-данных", "", "real-time данные с камер наблюдения") 
Rel(ai, databus, "Данные о событиях", "", "Структурированные данные")
Rel(сотрудник, цуп, "Использует", "Веб-приложение или мобильное приложение", "для мониторинга и получения оповещений")
Rel(цуп, databus, "Запросы данных и отправка комманд", "", "Аналитика, отчеты и комманды") 
Rel(databus, цуп, "Данные о работе хозяйства", "", "Данные о состоянии систем, оповещения и т.д.") 
Rel(животноводство, databus, "Публикация данных", "", "Структурированные данные о состоянии технических систем") 
Rel(databus, животноводство, "Получает комманды", "") 
Rel(databus, agent, " Данные о работе хозяйства ","")
Rel(agent, manager, "Отправка/Публикация данных","Данные о состоянии систем, оповещения и т.д.")

'Rel_R(видео, ai, "dec", "Формат?", "Способы?") 
'Lay_U(сотрудник, ai)


     


@enduml